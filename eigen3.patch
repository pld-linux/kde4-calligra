From 2db4438671e17002c7b02e3ad3a5208930765e4f Mon Sep 17 00:00:00 2001
From: Boudewijn Rempt <boud@valdyas.org>
Date: Fri, 9 Sep 2016 12:34:13 +0200
Subject: Remove all occurrences of using Eigen

This way we should be able to use openexr and eigen3's latest
beta together.
---
 image/kis_convolution_kernel.cc               | 14 ++++++------
 image/kis_convolution_kernel.h                |  8 +++----
 image/kis_gaussian_kernel.cpp                 | 12 +++++-----
 image/kis_gaussian_kernel.h                   |  5 ++---
 image/kis_selection_filters.cpp               |  4 ++--
 image/tests/kis_convolution_painter_test.cpp  | 14 ++++++------
 .../kis_color_selector_ring.cpp                    | 25 ++++++++++-----------
 .../waveletdecompose/kis_wavelet_kernel.cpp        | 14 ++++++------
 .../waveletdecompose/kis_wavelet_kernel.h          |  5 ++---
 plugins/filters/blur/kis_gaussian_blur_filter.h    |  2 --
 plugins/filters/blur/kis_lens_blur_filter.cpp      |  2 +-
 plugins/filters/blur/kis_lens_blur_filter.h        |  4 +---
 plugins/filters/blur/kis_motion_blur_filter.cpp    |  2 +-
 plugins/filters/blur/kis_motion_blur_filter.h      |  4 +---
 .../convolutionfilters/convolutionfilters.cpp      | 26 ++++++++++------------
 15 files changed, 64 insertions(+), 77 deletions(-)

diff -urNp -x '*.orig' calligra-2.9.11.org/krita/image/kis_convolution_kernel.cc calligra-2.9.11/krita/image/kis_convolution_kernel.cc
--- calligra-2.9.11.org/krita/image/kis_convolution_kernel.cc	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/image/kis_convolution_kernel.cc	2021-11-14 22:55:05.771518646 +0100
@@ -26,7 +26,7 @@
 struct KisConvolutionKernel::Private {
     qreal offset;
     qreal factor;
-    Matrix<qreal, Dynamic, Dynamic> data;
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> data;
 };
 
 KisConvolutionKernel::KisConvolutionKernel(quint32 _width, quint32 _height, qreal _offset, qreal _factor) : d(new Private)
@@ -72,12 +72,12 @@ void KisConvolutionKernel::setFactor(qre
     d->factor = factor;
 }
 
-Matrix<qreal, Dynamic, Dynamic>& KisConvolutionKernel::data()
+Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>& KisConvolutionKernel::data()
 {
     return d->data;
 }
 
-const Matrix<qreal, Dynamic, Dynamic>* KisConvolutionKernel::data() const
+const Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>* KisConvolutionKernel::data() const
 {
     return &(d->data);
 }
@@ -86,7 +86,7 @@ KisConvolutionKernelSP KisConvolutionKer
 {
     KisConvolutionKernelSP kernel = new KisConvolutionKernel(image.width(), image.height(), 0, 0);
 
-    Matrix<qreal, Dynamic, Dynamic>& data = kernel->data();
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>& data = kernel->data();
 #if QT_VERSION >= 0x040700
     const quint8* itImage = image.constBits();
 #else
@@ -121,7 +121,7 @@ KisConvolutionKernelSP KisConvolutionKer
     qreal xc = 0.5 * width - 0.5;
     qreal yc = 0.5 * height - 0.5;
 
-    Matrix<qreal, Dynamic, Dynamic>& data = kernel->data();
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>& data = kernel->data();
     qreal factor = 0;
 
 //     dbgImage << ppVar(xc) << ppVar(yc);
@@ -141,9 +141,9 @@ KisConvolutionKernelSP KisConvolutionKer
     return kernel;
 }
 
-KisConvolutionKernelSP KisConvolutionKernel::fromMatrix(Matrix<qreal, Dynamic, Dynamic> matrix, qreal offset, qreal factor)
+KisConvolutionKernelSP KisConvolutionKernel::fromMatrix(Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> matrix, qreal offset, qreal factor)
 {
-    KisConvolutionKernelSP kernel = new KisConvolutionKernel(matrix.cols(), matrix.rows(), offset, factor);        
+    KisConvolutionKernelSP kernel = new KisConvolutionKernel(matrix.cols(), matrix.rows(), offset, factor);
     kernel->data() = matrix;
 
     return kernel;
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/image/kis_convolution_kernel.h calligra-2.9.11/krita/image/kis_convolution_kernel.h
--- calligra-2.9.11.org/krita/image/kis_convolution_kernel.h	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/image/kis_convolution_kernel.h	2021-11-14 22:55:05.771518646 +0100
@@ -25,8 +25,6 @@
 #include "kritaimage_export.h"
 #include "kis_types.h"
 
-using namespace Eigen;
-
 class KisMaskGenerator;
 class QImage;
 
@@ -46,12 +44,12 @@ public:
     qreal offset() const;
     qreal factor() const;
     void setFactor(qreal);
-    Matrix<qreal, Dynamic, Dynamic>& data();
-    const Matrix<qreal, Dynamic, Dynamic> * data() const;
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>& data();
+    const Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> * data() const;
 
     static KisConvolutionKernelSP fromQImage(const QImage& image);
     static KisConvolutionKernelSP fromMaskGenerator(KisMaskGenerator *, qreal angle = 0.0);
-    static KisConvolutionKernelSP fromMatrix(Matrix<qreal, Dynamic, Dynamic> matrix, qreal offset, qreal factor);
+    static KisConvolutionKernelSP fromMatrix(Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> matrix, qreal offset, qreal factor);
 private:
     struct Private;
     Private* const d;
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/image/kis_gaussian_kernel.cpp calligra-2.9.11/krita/image/kis_gaussian_kernel.cpp
--- calligra-2.9.11.org/krita/image/kis_gaussian_kernel.cpp	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/image/kis_gaussian_kernel.cpp	2021-11-14 22:55:05.771518646 +0100
@@ -33,11 +33,11 @@ int KisGaussianKernel::kernelSizeFromRad
 }
 
 
-Matrix<qreal, Dynamic, Dynamic>
+Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>
 KisGaussianKernel::createHorizontalMatrix(qreal radius)
 {
     int kernelSize = kernelSizeFromRadius(radius);
-    Matrix<qreal, Dynamic, Dynamic> matrix(1, kernelSize);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> matrix(1, kernelSize);
 
     const qreal sigma = sigmaFromRadius(radius);
     const qreal multiplicand = 1 / (sqrt(2 * M_PI * sigma * sigma));
@@ -58,11 +58,11 @@ KisGaussianKernel::createHorizontalMatri
     return matrix;
 }
 
-Matrix<qreal, Dynamic, Dynamic>
+Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>
 KisGaussianKernel::createVerticalMatrix(qreal radius)
 {
     int kernelSize = kernelSizeFromRadius(radius);
-    Matrix<qreal, Dynamic, Dynamic> matrix(kernelSize, 1);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> matrix(kernelSize, 1);
 
     const qreal sigma = sigmaFromRadius(radius);
     const qreal multiplicand = 1 / (sqrt(2 * M_PI * sigma * sigma));
@@ -86,14 +86,14 @@ KisGaussianKernel::createVerticalMatrix(
 KisConvolutionKernelSP
 KisGaussianKernel::createHorizontalKernel(qreal radius)
 {
-    Matrix<qreal, Dynamic, Dynamic> matrix = createHorizontalMatrix(radius);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> matrix = createHorizontalMatrix(radius);
     return KisConvolutionKernel::fromMatrix(matrix, 0, matrix.sum());
 }
 
 KisConvolutionKernelSP
 KisGaussianKernel::createVerticalKernel(qreal radius)
 {
-    Matrix<qreal, Dynamic, Dynamic> matrix = createVerticalMatrix(radius);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> matrix = createVerticalMatrix(radius);
     return KisConvolutionKernel::fromMatrix(matrix, 0, matrix.sum());
 }
 
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/image/kis_gaussian_kernel.h calligra-2.9.11/krita/image/kis_gaussian_kernel.h
--- calligra-2.9.11.org/krita/image/kis_gaussian_kernel.h	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/image/kis_gaussian_kernel.h	2021-11-14 22:55:05.771518646 +0100
@@ -23,17 +23,16 @@
 #include "kis_types.h"
 
 #include <Eigen/Core>
-using namespace Eigen;
 
 class QRect;
 
 class KRITAIMAGE_EXPORT KisGaussianKernel
 {
 public:
-    static Matrix<qreal, Dynamic, Dynamic>
+    static Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>
         createHorizontalMatrix(qreal radius);
 
-    static Matrix<qreal, Dynamic, Dynamic>
+    static Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic>
         createVerticalMatrix(qreal radius);
 
     static KisConvolutionKernelSP
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/image/kis_selection_filters.cpp calligra-2.9.11/krita/image/kis_selection_filters.cpp
--- calligra-2.9.11.org/krita/image/kis_selection_filters.cpp	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/image/kis_selection_filters.cpp	2021-11-14 22:55:05.771518646 +0100
@@ -187,7 +187,7 @@ KUndo2MagicString KisDilateSelectionFilt
 QRect KisDilateSelectionFilter::changeRect(const QRect& rect)
 {
     const qint32 radius = 1;
-    return rect.adjusted(-radius, -radius, radius, radius); 
+    return rect.adjusted(-radius, -radius, radius, radius);
 }
 
 void KisDilateSelectionFilter::process(KisPixelSelectionSP pixelSelection, const QRect& rect)
@@ -483,7 +483,7 @@ void KisFeatherSelectionFilter::process(
 {
     // compute horizontal kernel
     const uint kernelSize = m_radius * 2 + 1;
-    Matrix<qreal, Dynamic, Dynamic> gaussianMatrix(1, kernelSize);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> gaussianMatrix(1, kernelSize);
 
     const qreal multiplicand = 1 / (2 * M_PI * m_radius * m_radius);
     const qreal exponentMultiplicand = 1 / (2 * m_radius * m_radius);
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/image/tests/kis_convolution_painter_test.cpp calligra-2.9.11/krita/image/tests/kis_convolution_painter_test.cpp
--- calligra-2.9.11.org/krita/image/tests/kis_convolution_painter_test.cpp	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/image/tests/kis_convolution_painter_test.cpp	2021-11-14 22:55:05.771518646 +0100
@@ -56,9 +56,9 @@ KisPaintDeviceSP initAsymTestDevice(QRec
     return dev;
 }
 
-Matrix<qreal, 3, 3> initSymmFilter(qreal &offset, qreal &factor)
+Eigen::Matrix<qreal, 3, 3> initSymmFilter(qreal &offset, qreal &factor)
 {
-    Matrix<qreal, 3, 3> filter;
+    Eigen::Matrix<qreal, 3, 3> filter;
     filter(0,0) = 1.0 / 21;
     filter(0,1) = 3.0 / 21;
     filter(0,2) = 1.0 / 21;
@@ -77,9 +77,9 @@ Matrix<qreal, 3, 3> initSymmFilter(qreal
     return filter;
 }
 
-Matrix<qreal, 3, 3> initAsymmFilter(qreal &offset, qreal &factor)
+Eigen::Matrix<qreal, 3, 3> initAsymmFilter(qreal &offset, qreal &factor)
 {
-    Matrix<qreal, 3, 3> filter;
+    Eigen::Matrix<qreal, 3, 3> filter;
     filter(0,0) = 1.0;
     filter(1,0) = 2.0;
     filter(2,0) = 1.0;
@@ -144,7 +144,7 @@ void KisConvolutionPainterTest::testSymm
 {
     qreal offset = 0.0;
     qreal factor = 1.0;
-    Matrix<qreal, 3, 3> filter = initSymmFilter(offset, factor);
+    Eigen::Matrix<qreal, 3, 3> filter = initSymmFilter(offset, factor);
 
     QRect imageRect;
     int pixelSize = 0;
@@ -172,7 +172,7 @@ void KisConvolutionPainterTest::testAsym
 {
     qreal offset = 0.0;
     qreal factor = 1.0;
-    Matrix<qreal, 3, 3> filter = initAsymmFilter(offset, factor);
+    Eigen::Matrix<qreal, 3, 3> filter = initAsymmFilter(offset, factor);
 
     QRect imageRect;
     int pixelSize = -1;
@@ -317,7 +317,7 @@ void KisConvolutionPainterTest::testGaus
 
 
    qreal horizontalRadius = 5, verticalRadius = 5;
-   
+
    for(int i = 0; i < 3 ; i++, horizontalRadius+=5, verticalRadius+=5)
    {
        QTime timer;
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/plugins/extensions/dockers/advancedcolorselector/kis_color_selector_ring.cpp calligra-2.9.11/krita/plugins/extensions/dockers/advancedcolorselector/kis_color_selector_ring.cpp
--- calligra-2.9.11.org/krita/plugins/extensions/dockers/advancedcolorselector/kis_color_selector_ring.cpp	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/plugins/extensions/dockers/advancedcolorselector/kis_color_selector_ring.cpp	2021-11-14 22:55:05.771518646 +0100
@@ -21,7 +21,6 @@
 #include <QMouseEvent>
 
 #include <Eigen/Core>
-using namespace Eigen;
 #include <cmath>
 
 #include "KoColor.h"
@@ -53,10 +52,10 @@ bool KisColorSelectorRing::containsPoint
     int innerRadiusSquared = innerRadius();
     outerRadiusSquared*=outerRadiusSquared;
     innerRadiusSquared*=innerRadiusSquared;
-    
-    
-    Vector2i relativeVector(x-width()/2, y-height()/2);
-    
+
+
+    Eigen::Vector2i relativeVector(x-width()/2, y-height()/2);
+
     if(relativeVector.squaredNorm() < outerRadiusSquared
        && relativeVector.squaredNorm() > innerRadiusSquared) {
         return true;
@@ -72,13 +71,13 @@ void KisColorSelectorRing::paint(QPainte
         colorCache();
         paintCache();
     }
-    
+
     int size = qMin(width(), height());
     if(m_cachedSize!=size) {
         m_cachedSize=size;
         paintCache();
     }
-    
+
     painter->drawImage(width()/2-m_pixelCache.width()/2,
                 height()/2-m_pixelCache.height()/2,
                 m_pixelCache);
@@ -139,17 +138,17 @@ void KisColorSelectorRing::setColor(cons
 void KisColorSelectorRing::paintCache()
 {
     QImage cache(m_cachedSize, m_cachedSize, QImage::Format_ARGB32_Premultiplied);
-    
-    Vector2i center(cache.width()/2., cache.height()/2.);
-    
+
+    Eigen::Vector2i center(cache.width()/2., cache.height()/2.);
+
     for(int x=0; x<cache.width(); x++) {
         for(int y=0; y<cache.height(); y++) {
-            Vector2i currentPoint((float)x, (float)y);
-            Vector2i relativeVector = currentPoint-center;
+            Eigen::Vector2i currentPoint((float)x, (float)y);
+            Eigen::Vector2i relativeVector = currentPoint-center;
 
             qreal currentRadius = relativeVector.squaredNorm();
             currentRadius=sqrt(currentRadius);
-            
+
             if(currentRadius < outerRadius()+1
                && currentRadius > innerRadius()-1)
             {
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/plugins/filters/blur/kis_gaussian_blur_filter.h calligra-2.9.11/krita/plugins/filters/blur/kis_gaussian_blur_filter.h
--- calligra-2.9.11.org/krita/plugins/filters/blur/kis_gaussian_blur_filter.h	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/plugins/filters/blur/kis_gaussian_blur_filter.h	2021-11-14 22:55:05.771518646 +0100
@@ -26,8 +26,6 @@
 
 #include <Eigen/Core>
 
-using namespace Eigen;
-
 class KisGaussianBlurFilter : public KisFilter
 {
 public:
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/plugins/filters/blur/kis_lens_blur_filter.cpp calligra-2.9.11/krita/plugins/filters/blur/kis_lens_blur_filter.cpp
--- calligra-2.9.11.org/krita/plugins/filters/blur/kis_lens_blur_filter.cpp	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/plugins/filters/blur/kis_lens_blur_filter.cpp	2021-11-14 22:55:05.771518646 +0100
@@ -159,7 +159,7 @@ void KisLensBlurFilter::processImpl(KisP
     imagePainter.drawPolygon(transformedIris, Qt::WindingFill);
 
     // construct kernel from image
-    Matrix<qreal, Dynamic, Dynamic> irisKernel(kernelHeight, kernelWidth);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> irisKernel(kernelHeight, kernelWidth);
     for (int j = 0; j < kernelHeight; ++j) {
         for (int i = 0; i < kernelWidth; ++i) {
             irisKernel(j, i) = qRed(kernelRepresentation.pixel(i, j));
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/plugins/filters/blur/kis_lens_blur_filter.h calligra-2.9.11/krita/plugins/filters/blur/kis_lens_blur_filter.h
--- calligra-2.9.11.org/krita/plugins/filters/blur/kis_lens_blur_filter.h	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/plugins/filters/blur/kis_lens_blur_filter.h	2021-11-14 22:55:05.771518646 +0100
@@ -1,4 +1,4 @@
-/* 
+/*
  * This file is part of Krita
  *
  * Copyright (c) 2010 Edward Apap <schumifer@hotmail.com>
@@ -27,8 +27,6 @@
 
 #include <Eigen/Core>
 
-using namespace Eigen;
-
 class KisLensBlurFilter : public KisFilter
 {
 public:
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/plugins/filters/blur/kis_motion_blur_filter.cpp calligra-2.9.11/krita/plugins/filters/blur/kis_motion_blur_filter.cpp
--- calligra-2.9.11.org/krita/plugins/filters/blur/kis_motion_blur_filter.cpp	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/plugins/filters/blur/kis_motion_blur_filter.cpp	2021-11-14 22:55:05.771518646 +0100
@@ -113,7 +113,7 @@ void KisMotionBlurFilter::processImpl(Ki
                           QPointF(kernelWidth / 2 + halfWidth, kernelHeight / 2 - halfHeight));
 
     // construct kernel from image
-    Matrix<qreal, Dynamic, Dynamic> motionBlurKernel(kernelHeight, kernelWidth);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> motionBlurKernel(kernelHeight, kernelWidth);
     for (int j = 0; j < kernelHeight; ++j) {
         for (int i = 0; i < kernelWidth; ++i) {
             motionBlurKernel(j, i) = qRed(kernelRepresentation.pixel(i, j));
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/plugins/filters/blur/kis_motion_blur_filter.h calligra-2.9.11/krita/plugins/filters/blur/kis_motion_blur_filter.h
--- calligra-2.9.11.org/krita/plugins/filters/blur/kis_motion_blur_filter.h	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/plugins/filters/blur/kis_motion_blur_filter.h	2021-11-14 22:55:05.771518646 +0100
@@ -27,8 +27,6 @@
 
 #include <Eigen/Core>
 
-using namespace Eigen;
-
 class KisMotionBlurFilter : public KisFilter
 {
 public:
diff -urNp -x '*.orig' calligra-2.9.11.org/krita/plugins/filters/convolutionfilters/convolutionfilters.cpp calligra-2.9.11/krita/plugins/filters/convolutionfilters/convolutionfilters.cpp
--- calligra-2.9.11.org/krita/plugins/filters/convolutionfilters/convolutionfilters.cpp	2016-02-02 20:53:14.000000000 +0100
+++ calligra-2.9.11/krita/plugins/filters/convolutionfilters/convolutionfilters.cpp	2021-11-14 22:55:05.771518646 +0100
@@ -36,8 +36,6 @@
 
 #include <Eigen/Core>
 
-using namespace Eigen;
-
 K_PLUGIN_FACTORY(KritaConvolutionFiltersFactory, registerPlugin<KritaConvolutionFilters>();)
 K_EXPORT_PLUGIN(KritaConvolutionFiltersFactory("krita"))
 
@@ -69,7 +67,7 @@ KisSharpenFilter::KisSharpenFilter()
     setSupportsPainting(true);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix <<  0, -2,   0,
                     -2,  11, -2,
                      0, -2,   0;
@@ -83,7 +81,7 @@ KisMeanRemovalFilter::KisMeanRemovalFilt
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix << -1, -1, -1,
                     -1,  9, -1,
                     -1, -1, -1;
@@ -97,7 +95,7 @@ KisEmbossLaplascianFilter::KisEmbossLapl
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix << -1, 0, -1,
                      0, 4,  0,
                     -1, 0, -1;
@@ -112,7 +110,7 @@ KisEmbossInAllDirectionsFilter::KisEmbos
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix << -1, -1, -1,
                     -1,  8, -1,
                     -1, -1, -1;
@@ -127,7 +125,7 @@ KisEmbossHorizontalVerticalFilter::KisEm
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix <<  0, -1,  0,
                     -1,  4, -1,
                      0, -1,  0;
@@ -142,7 +140,7 @@ KisEmbossVerticalFilter::KisEmbossVertic
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix << 0, -1, 0,
                     0,  2, 0,
                     0, -1, 0;
@@ -157,7 +155,7 @@ KisEmbossHorizontalFilter::KisEmbossHori
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix <<  0, 0,  0,
                     -1, 2, -1,
                      0, 0,  0;
@@ -172,7 +170,7 @@ KisEmbossDiagonalFilter::KisEmbossDiagon
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix << -1, 0, -1,
                      0, 4,  0,
                     -1, 0, -1;
@@ -188,7 +186,7 @@ KisTopEdgeDetectionFilter::KisTopEdgeDet
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix <<  1,  1,  1,
                      0,  0,  0,
                     -1, -1, -1;
@@ -203,7 +201,7 @@ KisRightEdgeDetectionFilter::KisRightEdg
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix << -1, 0, 1,
                     -1, 0, 1,
                     -1, 0, 1;
@@ -217,7 +215,7 @@ KisBottomEdgeDetectionFilter::KisBottomE
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix << -1, -1, -1,
                      0,  0,  0,
                      1,  1,  1;
@@ -231,7 +229,7 @@ KisLeftEdgeDetectionFilter::KisLeftEdgeD
     setSupportsPainting(false);
     setShowConfigurationWidget(false);
 
-    Matrix<qreal, Dynamic, Dynamic> kernelMatrix(3, 3);
+    Eigen::Matrix<qreal, Eigen::Dynamic, Eigen::Dynamic> kernelMatrix(3, 3);
     kernelMatrix << 1, 0, -1,
                     1, 0, -1,
                     1, 0, -1;
